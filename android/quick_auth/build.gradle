plugins {
    id 'com.android.library'
    id 'com.diffplug.spotless'
}
//apply from: '../gradle/maven-release-aar.gradle'

// check code style: gradle spotlessJavaCheck
// use code style: gradle spotlessJavaApply
spotless {
    java {
        target project.fileTree(project.rootDir) {
            include '**/*.java'
            exclude '**/signdemo1/**'
        }
        googleJavaFormat()
    }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            buildConfigField("String", "VERSION_NAME", "\"${project.version}\"")
        }
        release {
            minifyEnabled false
            debuggable false
            consumerProguardFiles 'consumer-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            buildConfigField("String", "VERSION_NAME", "\"${project.version}\"")
        }
    }
    flavorDimensions "main"

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.all {
            def fileName = "${archivesBaseName}-${version}.aar"
            outputFileName = fileName
        }
    }
    resourcePrefix "msqa_"
}

dependencies {
    // libraries for msal
    implementation "com.microsoft.identity.client:msal:${rootProject.ext.msalSDKVersion}"

    // libraries for android
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appCompatVersion}"

    // libraries for test
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espressoCoreVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${rootProject.ext.espressoCoreVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.runnerVersion}"
    androidTestImplementation "androidx.test:rules:${rootProject.ext.rulesVersion}"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoAndroidVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.ext.mockitoCoreVersion"
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    testImplementation "androidx.test:core:$rootProject.ext.androidxTestCoreVersion"
}