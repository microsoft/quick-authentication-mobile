plugins {
    id 'com.android.library'
}
apply from: '../gradle/maven-release-aar.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        project.archivesBaseName = "signinsdk"
        project.version = android.defaultConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        // testCoverageEnabled flag is set to true to get coverage reports for Android Tests
        debug {
            debuggable true
            buildConfigField("String", "VERSION_NAME", "\"${project.version}\"")
        }
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "VERSION_NAME", "\"${project.version}\"")
        }
    }
    flavorDimensions "main"

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
        }
    }

    libraryVariants.all { variant ->
        task("generate${variant.name}Javadoc", type: Javadoc) {
            title = "$name $version API"
            source = variant.javaCompile.source
            ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            doFirst {
                classpath = files(variant.javaCompile.classpath.files, ext.androidJar)
            }
            options {
                links("http://docs.oracle.com/javase/11/docs/api/");
                linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference");
                encoding "UTF-8"
                charSet 'UTF-8'
                author true
                version true
                splitIndex true
                noDeprecated true
                setMemberLevel(JavadocMemberLevel.PUBLIC)
            }
            failOnError false
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
            exclude '**/GraphAccountPhotoTask.java'
            exclude '**/InnerSignInClient.java'
            exclude '**/MicrosoftApplicationManager.java'
            exclude '**/MicrosoftMSALApplicationTask.java'
            exclude '**/MicrosoftMSALApplicationTask.java'

            exclude 'com/microsoft/quick/auth/signin/task/**'
            exclude 'com/microsoft/quick/auth/signin/consumer/**'
            exclude 'com/microsoft/quick/auth/signin/http/**'
            exclude 'com/microsoft/quick/auth/signin/signapplicationclient/MultipleAccountClientApplication.java'
            exclude 'com/microsoft/quick/auth/signin/signapplicationclient/MultipleApplicationHolder.java'
            exclude 'com/microsoft/quick/auth/signin/signapplicationclient/SingleAccountClientApplication.java'
            exclude 'com/microsoft/quick/auth/signin/signapplicationclient/SingleApplicationHolder.java'
            exclude 'com/microsoft/quick/auth/signin/MQAApplicationManager.java'
            exclude 'com/microsoft/quick/auth/signin/MQAInnerSignInClient.java'
            exclude 'com/microsoft/quick/auth/signin/MQASignInInitializer.java'
            exclude 'com/microsoft/quick/auth/signin/MQAApplicationTask.java'
            exclude 'com/microsoft/quick/auth/signin/view/SignInButtonConfig.java'
            exclude 'com/microsoft/quick/auth/signin/util/**'
            destinationDir = reporting.file("$project.rootDir/docs/")
        }
    }
//    resourcePrefix "mqa_"
}

dependencies {
    // libraries for msal
    api "com.microsoft.identity.client:msal:${rootProject.ext.msalSDKVersion}"

    // libraries for android
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appCompatVersion}"

    // libraries for test
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.espressoCoreVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${rootProject.ext.espressoCoreVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.ext.runnerVersion}"
    androidTestImplementation "androidx.test:rules:${rootProject.ext.rulesVersion}"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoAndroidVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.ext.mockitoCoreVersion"
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    testImplementation "androidx.test:core:$rootProject.ext.androidxTestCoreVersion"
}